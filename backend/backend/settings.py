"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--^i)_4rpsjduc$ze&xq&fszt8^t^k-+(rl)bith63mi(-i@$(e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '172.23.208.1']


# Application definition

INSTALLED_APPS = [ # ★★★★★
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'debug_toolbar',
    'corsheaders',
    'app',
    'main',
    'mdl',
    'login',
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = ['Content-Type', 'X-CSRFToken']

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",  # 로컬 React 개발 서버
    "http://172.23.208.1:3000"  # Docker 등에서 사용되는 React 개발 서버 IP 주소
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",  # 로컬 React 개발 서버
    "http://172.23.208.1:3000"  # Docker 환경 등에서 React 개발 서버
]

CSRF_COOKIE_HTTPONLY = False  # 반드시 False로 설정하여 JS에서 접근 가능하도록 합니다.
CSRF_COOKIE_SECURE = False  # 개발 단계에서는 False로 설정 (HTTPS 사용 시 True)

INTERNAL_IPS = ['127.0.0.1']  # Localhost에서만 작동하도록 설정

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join((BASE_DIR), 'recipe-app', 'build')  # 빌드된 React 파일 경로 수정
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # 데이터베이스 백엔드 엔진 (기본은 SQLite3)
        'NAME': os.path.join(BASE_DIR, 'backend', 'db.sqlite3'),         # 데이터베이스 파일 경로 (프로젝트 루트에 생성)
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_REDIRECT_URL = 'main-page'  # 로그인 후 리다이렉트될 URL 이름
LOGOUT_REDIRECT_URL = 'login-page'  # 로그아웃 후 리다이렉트될 URL 이름

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'recipe-app', 'build', 'static'),  # 빌드된 정적 파일 경로 수정
    os.path.join(BASE_DIR, 'backend', 'static'),  # 프로젝트의 정적 리소스를 저장하는 폴더 (상대 경로로 올바르게 지정)
    'C:/home/frontend/css',  # 절대 경로를 직접 지정
    'C:/home/frontend/image',  # 절대 경로를 직접 지정
]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'backend', 'media')

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CSRF_COOKIE_SECURE = False  # 개발 환경에서는 False, 프로덕션에서는 True
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = False
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']
SESSION_COOKIE_SECURE = False  # 개발 환경에서는 False, 프로덕션에서는 True
SESSION_COOKIE_SAMESITE = 'Lax'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',  # DEBUG 레벨 이상의 로그를 콘솔에 출력
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {  # Django 관련 로그
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'login': {  # 'login' 앱의 로그 (signup_api 뷰 함수 포함)
            'handlers': ['console'],
            'level': 'DEBUG',  # DEBUG 레벨 이상의 로그를 콘솔에 출력
            'propagate': False,
        },
    },
}